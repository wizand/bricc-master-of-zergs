#include "MasterHeader.nxc"
#include "Master_locations.nxc"
#include "MasterSearchProtocol.nxc"

/////////////////
// OUT GOING BOXES
/////////////////
#define OUT_COMMAND 1
#define OUT_PARAMETER 2

#define OUT_LOC 7   // Location information to the Android

#define GAP_FOUND 6

/////////////////
// INBOUND BOXES
/////////////////

#define IN_ACK 3


#define IN_CMD 7
#define IN_PAR 8
#define IN_DES 9

///////////////////////////////////////////////////
// FUNCTION TO WAIT FOR ACKNOWLEDGEMENT
///////////////////////////////////////////////////
int getAck() {

    int ack = 0;
    int timeout = 0;
    TextOut(5,LCD_LINE3, "Waiting for ack");

    while (ack == 0 || timeout == 30 ) {
          Wait(100);
          ReceiveRemoteNumber(IN_ACK, true, ack);
          timeout++;
    }

    ClearLine(LCD_LINE3);
    if ( ack ) {
       TextOut(5, LCD_LINE3, "ACK recieved");
       Wait(500);
       return 1;
    } else {
       TextOut(5, LCD_LINE3, "Error with ACK");
       return -1;
    }
    
    return 0;
}

//////////////////////////////////////////////////
// FUNCTION TO SEND COMMAND
//////////////////////////////////////////////////
void sendCommand(int cmd, int des) {
     TextOut(5, LCD_LINE7, "Send C:" + NumToStr(cmd) + " D:" + NumToStr(des) );
     SendRemoteNumber(des, OUT_COMMAND, cmd);
}
         /*
void sendCommandString samasta boxista kun itse komennot


*/

///////////////////////////////////////////////////
// FUNCTION TO SEND PARAMETERS
///////////////////////////////////////////////////
void sendParameter(int par, int des) {
     TextOut(5, LCD_LINE8, "Send P:" + NumToStr(par) + " D:" + NumToStr(des));
     SendRemoteNumber(des, OUT_PARAMETER, par);
}


task main() {

     int cmd = 0;
     int par = 0;
     int des = 0;

     int ack = 0;

     while(true) {
       ClearScreen();
       ClearLine(LCD_LINE1);
       TextOut(0,LCD_LINE1,"MASTER LISTENING" );
       Wait(400);
       ReceiveRemoteNumber(IN_CMD, true, cmd);

       if (cmd != 0) {
          if (cmd == 15 ) {

             Wait(100);
             SendRemoteString(1, OUT_COMMAND, "ACK");
             Wait(100);
             StartTask(SearchProtocol);

             break;
             
          }  else {
            Wait(200);
            ReceiveRemoteNumber(IN_PAR, true, par);
            Wait(200);
            ReceiveRemoteNumber(IN_DES, true, des);

            TextOut(0,LCD_LINE2,"COMMAND RECEIVED" );
            TextOut(0,LCD_LINE3,"C:" + NumToStr(cmd) + " P:" + NumToStr(par) + " D:" + NumToStr(des) );



            Wait(400);
            sendCommand(cmd, des);
            //SendRemoteNumber(des, OUT_COMMAND, cmd);
            Wait(400);
            sendParameter(par, des);
            //SendRemoteNumber(des, OUT_PARAMETER, par);
            Wait(400);

            ClearLine(LCD_LINE7);
            ClearLine(LCD_LINE8);

            int ack = getAck();

            ClearLine(LCD_LINE3);
            TextOut(0,LCD_LINE3, "ACK STATUS: " + NumToStr(ack) );
            Wait(400);
            SendRemoteString(1, 6, "ACK");
            Wait(300);
            cmd = 0;
            par = 0;
            des = 0;
           }
       }
     }
}
