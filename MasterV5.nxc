#include "MasterHeader.nxc"
#include "Master_locations.nxc"
#include "MasterSearchProtocol.nxc"

/////////////////
// OUT GOING BOXES
/////////////////
#define OUT_COMMAND 1
#define OUT_PARAMETER 2

#define OUT_LOC 7   // Location information to the Android

#define GAP_FOUND 6

/////////////////
// INBOUND BOXES
/////////////////

#define IN_ACK 3


#define IN_CMD 7
#define IN_PAR 8
#define IN_DES 9

///////////////////////////////////////////////////
// FUNCTION TO WAIT FOR ACKNOWLEDGEMENT
///////////////////////////////////////////////////
int getAck() {

    int ack = 0;
    int timeout = 0;
    TextOut(5,LCD_LINE3, "Waiting for ack");

    while (ack == 0 || timeout == 30 ) {
          Wait(100);
          ReceiveRemoteNumber(IN_ACK, true, ack);
          timeout++;
    }

    ClearLine(LCD_LINE3);
    if ( ack ) {
       TextOut(5, LCD_LINE3, "ACK recieved");
       Wait(500);
       return 1;
    } else {
       TextOut(5, LCD_LINE3, "Error with ACK");
       return -1;
    }
    
    return 0;
}

//////////////////////////////////////////////////
// FUNCTION TO SEND COMMAND
//////////////////////////////////////////////////
void sendCommand(int cmd, int des) {
     TextOut(5, LCD_LINE7, "Send C:" + NumToStr(cmd) + " D:" + NumToStr(des) );
     SendRemoteNumber(des, OUT_COMMAND, cmd);
}


///////////////////////////////////////////////////
// FUNCTION TO SEND PARAMETERS
///////////////////////////////////////////////////
void sendParameter(int par, int des) {
     TextOut(5, LCD_LINE8, "Send P:" + NumToStr(par) + " D:" + NumToStr(des));
     SendRemoteNumber(des, OUT_PARAMETER, par);
}

void sendZergIdentities() {

   TextOut(0,LCD_LINE1,"Sending id to Z1" );
   sendCommand(1, ZERG_1);
   Wait(200);
   sendParameter(1, ZERG_1);
   Wait(200);
   getAck();
   
   ClearLine(LCD_LINE1);
   TextOut(0,LCD_LINE1,"Sending id to Z2" );
   Wait(200);
   sendCommand(1, ZERG_2);
   Wait(200);
   sendParameter(2, ZERG_2);
   Wait(200);
   getAck();
   ClearLine(LCD_LINE1);
   TextOut(0,LCD_LINE1,"Identities OK." );
   
   Wait(250);
}

void notifyZergs() {

}

task main() {

     ClearScreen();

     
     LOC = false;
     SEARCH = false;
     
     locations = "";

     int cmd = 0;
     int par = 0;
     int des = 0;

     int ack = 0;
     
     string buf1 = "";
     string buf2 = "";
     string loc1 = "-10_0_0_1_";
     string loc2 = "10_0_2_2_";
     string combination;
     int update = 0;
     
   //  sendZergIdentities();
     
     
     ClearScreen();
     TextOut(0,LCD_LINE1,"MASTER LISTENING" );
     
     while(true) {

       Wait(50);
       
       if ( !SEARCH ) {
         ReceiveRemoteNumber(IN_CMD, true, cmd);

         if (cmd != 0) {
            if (cmd == 15 ) {
            
               SEARCH = true;
               FormatLocations();

               Wait(100);
               SendRemoteString(1, OUT_COMMAND, "ACK");
               Wait(300);

               //Relying the scout-order to the zerglings
               ClearLine(LCD_LINE1);
               TextOut(0,LCD_LINE1,"Sending cmd to Z1" );
               sendCommand(15, ZERG_1);
               Wait(200);
               sendParameter(15, ZERG_1);
               Wait(200);
               getAck();
               Wait(200);


               ClearLine(LCD_LINE1);
               TextOut(0,LCD_LINE1,"Sending cmd to Z2" );
               sendCommand(15, ZERG_2);
               Wait(200);
               sendParameter(15, ZERG_2);
               Wait(200);
               getAck();
               Wait(200);

               ClearScreen();
               TextOut(0,LCD_LINE1, "STARTING SEARCH");
               Wait(500);



            } else {
                Wait(200);
                ReceiveRemoteNumber(IN_PAR, true, par);
                Wait(200);
                ReceiveRemoteNumber(IN_DES, true, des);

                TextOut(0,LCD_LINE2,"COMMAND RECEIVED" );
                TextOut(0,LCD_LINE3,"C:" + NumToStr(cmd) + " P:" + NumToStr(par) + " D:" + NumToStr(des) );



                Wait(300);

                sendCommand(cmd, des);
                Wait(300);
                sendParameter(par, des);
                Wait(200);

                ClearLine(LCD_LINE2);
                ClearLine(LCD_LINE3);
                ClearLine(LCD_LINE7);
                ClearLine(LCD_LINE8);

                int ack = getAck();

                //TextOut(0,LCD_LINE3, "ACK STATUS: " + NumToStr(ack) );
                //Wait(400);
                //SendRemoteString(1, 6, "ACK");
                //Wait(300);
                ClearLine(LCD_LINE3);
                cmd = 0;
                par = 0;
                des = 0;
              }
         }
       }

       if ( SEARCH ) {

          update++;

          Wait(200);
          ReceiveRemoteString(IN_LOCATION_Z1, true, buf1);
          Wait(200);
          if ( StrLen(buf1) > 4 ) {
               loc1 = buf1;
          }
          
          ReceiveRemoteString(IN_LOCATION_Z2, true, buf2);
          Wait(200);
          
          if ( StrLen(buf2) > 4 ) {
             loc2 = buf2;
          }
          
          TextOut(0, LCD_LINE1, "L1: " + loc1 + " " + NumToStr(update) );
          TextOut(0, LCD_LINE2, "L2: " + loc2);
          
          combination = loc1 + loc2;
          
          TextOut(0, LCD_LINE3, combination);
          
          Wait(50);
          SendRemoteString(1, 7, combination );

         // getLocations();
         // LocationsToAndroid();
       }
       
      /* if ( SEARCH ) {
          checkIfFound();
       }  */

     }
}
